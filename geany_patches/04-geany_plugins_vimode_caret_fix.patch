From cb28b2f334d38bb78bcb15efd37f2c20172c499b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ji=C5=99=C3=AD=20Techet?= <techet@gmail.com>
Date: Wed, 24 Nov 2021 00:13:29 +0100
Subject: [PATCH] vimode: avoid caret position change when inserting EOL at EOF

When current position is changed in the document and this position is
outside the visibility of the current screen, when returning
back, the call of SCI_GOTOPOS causes window scroll to a different position
than before.

To avoid this problem, insert_eof_nl_if_missing() and remove_char_from_eof()
avoid setting the position now and, instead, insert/remove the EOL
character using operations that don't change caret position.
---
 vimode/src/cmds/edit.c | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/vimode/src/cmds/edit.c b/vimode/src/cmds/edit.c
index 8e687257..ecdd0dd1 100644
--- a/vimode/src/cmds/edit.c
+++ b/vimode/src/cmds/edit.c
@@ -83,16 +83,21 @@ void cmd_clear_right(CmdContext *c, CmdParams *p)
 
 static gboolean insert_eof_nl_if_missing(CmdParams *p)
 {
-	gint pos = SSM(p->sci, SCI_GETCURRENTPOS, 0, 0);
 	gint eof_pos = SSM(p->sci, SCI_GETLENGTH, 0, 0);
 	gint eof_line_num = SSM(p->sci, SCI_LINEFROMPOSITION, eof_pos, 0);
 	gint before_eof = PREV(p->sci, eof_pos);
 	gint before_eof_line_num = SSM(p->sci, SCI_LINEFROMPOSITION, before_eof, 0);
 
 	if (eof_line_num == before_eof_line_num) {
-		SET_POS(p->sci, eof_pos, FALSE);
-		SSM(p->sci, SCI_NEWLINE, 0, 0);
-		SET_POS(p->sci, pos, FALSE);
+		const gchar *nl = "\n";
+		gint eol_mode = SSM(p->sci, SCI_GETEOLMODE, 0, 0);
+		if (eol_mode == SC_EOL_CRLF) {
+			nl = "\r\n";
+		}
+		else if (eol_mode == SC_EOL_CR) {
+			nl = "\r";
+		}
+		SSM(p->sci, SCI_INSERTTEXT, eof_pos, (sptr_t)nl);
 		return TRUE;
 	}
 	return FALSE;
@@ -101,12 +106,10 @@ static gboolean insert_eof_nl_if_missing(CmdParams *p)
 
 static void remove_char_from_eof(CmdParams *p)
 {
-	gint pos = SSM(p->sci, SCI_GETCURRENTPOS, 0, 0);
 	gint eof_pos = SSM(p->sci, SCI_GETLENGTH, 0, 0);
+	gint before_eof_pos = PREV(p->sci, eof_pos);
 
-	SET_POS(p->sci, eof_pos, FALSE);
-	SSM(p->sci, SCI_DELETEBACK, 0, 0);
-	SET_POS(p->sci, pos, FALSE);
+	SSM(p->sci, SCI_DELETERANGE, before_eof_pos, eof_pos - before_eof_pos);
 }
 
 
-- 
2.31.1

